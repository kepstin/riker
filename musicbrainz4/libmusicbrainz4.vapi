/* --------------------------------------------------------------------------

   THIS FILE IS AUTOMATICALLY GENERATED - DO NOT EDIT IT!

----------------------------------------------------------------------------*/

[CCode (cheader_filename = "musicbrainz4/mb4_c.h")]
namespace Mb4 {
    [Compact]
    public class Entity {
        public int ext_attributes_size ();
        [CCode (cname = "mb4_entity_ext_attribute_name")]
        int ext_attribute_name_array (int item, char[]? str);
        [CCode (cname = "mb4_entity_ext_attribute_name_wrapper")]
        public string ext_attribute_name (int item) {
            int size = ext_attribute_name_array (item, null);
            char[] buf = new char[size + 1];
            ext_attribute_name_array (item, buf);
            return (string) buf;
        }
        [CCode (cname = "mb4_entity_ext_attribute_value")]
        int ext_attribute_value_array (int item, char[]? str);
        [CCode (cname = "mb4_entity_ext_attribute_value_wrapper")]
        public string ext_attribute_value (int item) {
            int size = ext_attribute_value_array (item, null);
            char[] buf = new char[size + 1];
            ext_attribute_value_array (item, buf);
            return (string) buf;
        }
        public int ext_elements_size ();
        [CCode (cname = "mb4_entity_ext_element_name")]
        int ext_element_name_array (int item, char[]? str);
        [CCode (cname = "mb4_entity_ext_element_name_wrapper")]
        public string ext_element_name (int item) {
            int size = ext_element_name_array (item, null);
            char[] buf = new char[size + 1];
            ext_element_name_array (item, buf);
            return (string) buf;
        }
        [CCode (cname = "mb4_entity_ext_element_value")]
        int ext_element_value_array (int item, char[]? str);
        [CCode (cname = "mb4_entity_ext_element_value_wrapper")]
        public string ext_element_value (int item) {
            int size = ext_element_value_array (item, null);
            char[] buf = new char[size + 1];
            ext_element_value_array (item, buf);
            return (string) buf;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_alias_delete", lower_case_cprefix = "mb4_alias_")]
    public class Alias : Entity {
        [CCode (cname = "mb4_alias_clone")]
        public Alias.copy(Alias alias);
        
        [CCode (cname = "mb4_alias_get_locale")]
        int get_locale_array (char[]? str);
        public string locale {
            [CCode (cname = "mb4_alias_get_locale_wrapper")]
            owned get {
                int size = get_locale_array (null);
                char[] buf = new char[size + 1];
                get_locale_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_alias_get_text")]
        int get_text_array (char[]? str);
        public string text {
            [CCode (cname = "mb4_alias_get_text_wrapper")]
            owned get {
                int size = get_text_array (null);
                char[] buf = new char[size + 1];
                get_text_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_annotation_delete", lower_case_cprefix = "mb4_annotation_")]
    public class Annotation : Entity {
        [CCode (cname = "mb4_annotation_clone")]
        public Annotation.copy(Annotation annotation);
        
        [CCode (cname = "mb4_annotation_get_type")]
        int get_type_array (char[]? str);
        public string type {
            [CCode (cname = "mb4_annotation_get_type_wrapper")]
            owned get {
                int size = get_type_array (null);
                char[] buf = new char[size + 1];
                get_type_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_annotation_get_entity")]
        int get_entity_array (char[]? str);
        public string entity {
            [CCode (cname = "mb4_annotation_get_entity_wrapper")]
            owned get {
                int size = get_entity_array (null);
                char[] buf = new char[size + 1];
                get_entity_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_annotation_get_name")]
        int get_name_array (char[]? str);
        public string name {
            [CCode (cname = "mb4_annotation_get_name_wrapper")]
            owned get {
                int size = get_name_array (null);
                char[] buf = new char[size + 1];
                get_name_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_annotation_get_text")]
        int get_text_array (char[]? str);
        public string text {
            [CCode (cname = "mb4_annotation_get_text_wrapper")]
            owned get {
                int size = get_text_array (null);
                char[] buf = new char[size + 1];
                get_text_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_artist_delete", lower_case_cprefix = "mb4_artist_")]
    public class Artist : Entity {
        [CCode (cname = "mb4_artist_clone")]
        public Artist.copy(Artist artist);
        
        [CCode (cname = "mb4_artist_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_artist_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_artist_get_type")]
        int get_type_array (char[]? str);
        public string type {
            [CCode (cname = "mb4_artist_get_type_wrapper")]
            owned get {
                int size = get_type_array (null);
                char[] buf = new char[size + 1];
                get_type_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_artist_get_name")]
        int get_name_array (char[]? str);
        public string name {
            [CCode (cname = "mb4_artist_get_name_wrapper")]
            owned get {
                int size = get_name_array (null);
                char[] buf = new char[size + 1];
                get_name_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_artist_get_sortname")]
        int get_sort_name_array (char[]? str);
        public string sort_name {
            [CCode (cname = "mb4_artist_get_sortname_wrapper")]
            owned get {
                int size = get_sort_name_array (null);
                char[] buf = new char[size + 1];
                get_sort_name_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_artist_get_gender")]
        int get_gender_array (char[]? str);
        public string gender {
            [CCode (cname = "mb4_artist_get_gender_wrapper")]
            owned get {
                int size = get_gender_array (null);
                char[] buf = new char[size + 1];
                get_gender_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_artist_get_country")]
        int get_country_array (char[]? str);
        public string country {
            [CCode (cname = "mb4_artist_get_country_wrapper")]
            owned get {
                int size = get_country_array (null);
                char[] buf = new char[size + 1];
                get_country_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_artist_get_disambiguation")]
        int get_disambiguation_array (char[]? str);
        public string disambiguation {
            [CCode (cname = "mb4_artist_get_disambiguation_wrapper")]
            owned get {
                int size = get_disambiguation_array (null);
                char[] buf = new char[size + 1];
                get_disambiguation_array (buf);
                return (string) buf;
            }
        }
        public Lifespan? lifespan {
            [CCode (cname = "mb4_artist_get_lifespan")]
            get;
        }
        public AliasList? alias_list {
            [CCode (cname = "mb4_artist_get_aliaslist")]
            get;
        }
        public RecordingList? recording_list {
            [CCode (cname = "mb4_artist_get_recordinglist")]
            get;
        }
        public ReleaseList? release_list {
            [CCode (cname = "mb4_artist_get_releaselist")]
            get;
        }
        public ReleaseGroupList? release_group_list {
            [CCode (cname = "mb4_artist_get_releasegrouplist")]
            get;
        }
        public LabelList? label_list {
            [CCode (cname = "mb4_artist_get_labellist")]
            get;
        }
        public WorkList? work_list {
            [CCode (cname = "mb4_artist_get_worklist")]
            get;
        }
        public RelationList? relation_list {
            [CCode (cname = "mb4_artist_get_relationlist")]
            get;
        }
        public TagList? tag_list {
            [CCode (cname = "mb4_artist_get_taglist")]
            get;
        }
        public UserTagList? user_tag_list {
            [CCode (cname = "mb4_artist_get_usertaglist")]
            get;
        }
        public Rating? rating {
            [CCode (cname = "mb4_artist_get_rating")]
            get;
        }
        public UserRating? user_rating {
            [CCode (cname = "mb4_artist_get_userrating")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_artistcredit_delete", lower_case_cprefix = "mb4_artistcredit_")]
    public class ArtistCredit : Entity {
        [CCode (cname = "mb4_artistcredit_clone")]
        public ArtistCredit.copy(ArtistCredit artistcredit);
        public NameCreditList? name_credit_list {
            [CCode (cname = "mb4_artistcredit_get_namecreditlist")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_attribute_delete", lower_case_cprefix = "mb4_attribute_")]
    public class Attribute : Entity {
        [CCode (cname = "mb4_attribute_clone")]
        public Attribute.copy(Attribute attribute);
        
        [CCode (cname = "mb4_attribute_get_text")]
        int get_text_array (char[]? str);
        public string text {
            [CCode (cname = "mb4_attribute_get_text_wrapper")]
            owned get {
                int size = get_text_array (null);
                char[] buf = new char[size + 1];
                get_text_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_cdstub_delete", lower_case_cprefix = "mb4_cdstub_")]
    public class CDStub : Entity {
        [CCode (cname = "mb4_cdstub_clone")]
        public CDStub.copy(CDStub cdstub);
        
        [CCode (cname = "mb4_cdstub_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_cdstub_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_cdstub_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_cdstub_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_cdstub_get_artist")]
        int get_artist_array (char[]? str);
        public string artist {
            [CCode (cname = "mb4_cdstub_get_artist_wrapper")]
            owned get {
                int size = get_artist_array (null);
                char[] buf = new char[size + 1];
                get_artist_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_cdstub_get_barcode")]
        int get_barcode_array (char[]? str);
        public string barcode {
            [CCode (cname = "mb4_cdstub_get_barcode_wrapper")]
            owned get {
                int size = get_barcode_array (null);
                char[] buf = new char[size + 1];
                get_barcode_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_cdstub_get_comment")]
        int get_comment_array (char[]? str);
        public string comment {
            [CCode (cname = "mb4_cdstub_get_comment_wrapper")]
            owned get {
                int size = get_comment_array (null);
                char[] buf = new char[size + 1];
                get_comment_array (buf);
                return (string) buf;
            }
        }
        public NonMBTrackList? non_mb_track_list {
            [CCode (cname = "mb4_cdstub_get_nonmbtracklist")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_collection_delete", lower_case_cprefix = "mb4_collection_")]
    public class Collection : Entity {
        [CCode (cname = "mb4_collection_clone")]
        public Collection.copy(Collection collection);
        
        [CCode (cname = "mb4_collection_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_collection_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_collection_get_name")]
        int get_name_array (char[]? str);
        public string name {
            [CCode (cname = "mb4_collection_get_name_wrapper")]
            owned get {
                int size = get_name_array (null);
                char[] buf = new char[size + 1];
                get_name_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_collection_get_editor")]
        int get_editor_array (char[]? str);
        public string editor {
            [CCode (cname = "mb4_collection_get_editor_wrapper")]
            owned get {
                int size = get_editor_array (null);
                char[] buf = new char[size + 1];
                get_editor_array (buf);
                return (string) buf;
            }
        }
        public ReleaseList? release_list {
            [CCode (cname = "mb4_collection_get_releaselist")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_disc_delete", lower_case_cprefix = "mb4_disc_")]
    public class Disc : Entity {
        [CCode (cname = "mb4_disc_clone")]
        public Disc.copy(Disc disc);
        
        [CCode (cname = "mb4_disc_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_disc_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        public int sectors {
            [CCode (cname = "mb4_disc_get_sectors")]
            get;
        }
        public ReleaseList? release_list {
            [CCode (cname = "mb4_disc_get_releaselist")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_freedbdisc_delete", lower_case_cprefix = "mb4_freedbdisc_")]
    public class FreeDBDisc : Entity {
        [CCode (cname = "mb4_freedbdisc_clone")]
        public FreeDBDisc.copy(FreeDBDisc freedbdisc);
        
        [CCode (cname = "mb4_freedbdisc_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_freedbdisc_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_freedbdisc_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_freedbdisc_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_freedbdisc_get_artist")]
        int get_artist_array (char[]? str);
        public string artist {
            [CCode (cname = "mb4_freedbdisc_get_artist_wrapper")]
            owned get {
                int size = get_artist_array (null);
                char[] buf = new char[size + 1];
                get_artist_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_freedbdisc_get_category")]
        int get_category_array (char[]? str);
        public string category {
            [CCode (cname = "mb4_freedbdisc_get_category_wrapper")]
            owned get {
                int size = get_category_array (null);
                char[] buf = new char[size + 1];
                get_category_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_freedbdisc_get_year")]
        int get_year_array (char[]? str);
        public string year {
            [CCode (cname = "mb4_freedbdisc_get_year_wrapper")]
            owned get {
                int size = get_year_array (null);
                char[] buf = new char[size + 1];
                get_year_array (buf);
                return (string) buf;
            }
        }
        public NonMBTrackList? non_mb_track_list {
            [CCode (cname = "mb4_freedbdisc_get_nonmbtracklist")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_isrc_delete", lower_case_cprefix = "mb4_isrc_")]
    public class ISRC : Entity {
        [CCode (cname = "mb4_isrc_clone")]
        public ISRC.copy(ISRC isrc);
        
        [CCode (cname = "mb4_isrc_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_isrc_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        public RecordingList? recording_list {
            [CCode (cname = "mb4_isrc_get_recordinglist")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_label_delete", lower_case_cprefix = "mb4_label_")]
    public class Label : Entity {
        [CCode (cname = "mb4_label_clone")]
        public Label.copy(Label label);
        
        [CCode (cname = "mb4_label_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_label_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_label_get_type")]
        int get_type_array (char[]? str);
        public string type {
            [CCode (cname = "mb4_label_get_type_wrapper")]
            owned get {
                int size = get_type_array (null);
                char[] buf = new char[size + 1];
                get_type_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_label_get_name")]
        int get_name_array (char[]? str);
        public string name {
            [CCode (cname = "mb4_label_get_name_wrapper")]
            owned get {
                int size = get_name_array (null);
                char[] buf = new char[size + 1];
                get_name_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_label_get_sortname")]
        int get_sort_name_array (char[]? str);
        public string sort_name {
            [CCode (cname = "mb4_label_get_sortname_wrapper")]
            owned get {
                int size = get_sort_name_array (null);
                char[] buf = new char[size + 1];
                get_sort_name_array (buf);
                return (string) buf;
            }
        }
        public int label_code {
            [CCode (cname = "mb4_label_get_labelcode")]
            get;
        }
        
        [CCode (cname = "mb4_label_get_disambiguation")]
        int get_disambiguation_array (char[]? str);
        public string disambiguation {
            [CCode (cname = "mb4_label_get_disambiguation_wrapper")]
            owned get {
                int size = get_disambiguation_array (null);
                char[] buf = new char[size + 1];
                get_disambiguation_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_label_get_country")]
        int get_country_array (char[]? str);
        public string country {
            [CCode (cname = "mb4_label_get_country_wrapper")]
            owned get {
                int size = get_country_array (null);
                char[] buf = new char[size + 1];
                get_country_array (buf);
                return (string) buf;
            }
        }
        public Lifespan? lifespan {
            [CCode (cname = "mb4_label_get_lifespan")]
            get;
        }
        public AliasList? alias_list {
            [CCode (cname = "mb4_label_get_aliaslist")]
            get;
        }
        public ReleaseList? release_list {
            [CCode (cname = "mb4_label_get_releaselist")]
            get;
        }
        public RelationList? relation_list {
            [CCode (cname = "mb4_label_get_relationlist")]
            get;
        }
        public TagList? tag_list {
            [CCode (cname = "mb4_label_get_taglist")]
            get;
        }
        public UserTagList? user_tag_list {
            [CCode (cname = "mb4_label_get_usertaglist")]
            get;
        }
        public Rating? rating {
            [CCode (cname = "mb4_label_get_rating")]
            get;
        }
        public UserRating? user_rating {
            [CCode (cname = "mb4_label_get_userrating")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_labelinfo_delete", lower_case_cprefix = "mb4_labelinfo_")]
    public class LabelInfo : Entity {
        [CCode (cname = "mb4_labelinfo_clone")]
        public LabelInfo.copy(LabelInfo labelinfo);
        
        [CCode (cname = "mb4_labelinfo_get_catalognumber")]
        int get_catalog_number_array (char[]? str);
        public string catalog_number {
            [CCode (cname = "mb4_labelinfo_get_catalognumber_wrapper")]
            owned get {
                int size = get_catalog_number_array (null);
                char[] buf = new char[size + 1];
                get_catalog_number_array (buf);
                return (string) buf;
            }
        }
        public Label? label {
            [CCode (cname = "mb4_labelinfo_get_label")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_lifespan_delete", lower_case_cprefix = "mb4_lifespan_")]
    public class Lifespan : Entity {
        [CCode (cname = "mb4_lifespan_clone")]
        public Lifespan.copy(Lifespan lifespan);
        
        [CCode (cname = "mb4_lifespan_get_begin")]
        int get_begin_array (char[]? str);
        public string begin {
            [CCode (cname = "mb4_lifespan_get_begin_wrapper")]
            owned get {
                int size = get_begin_array (null);
                char[] buf = new char[size + 1];
                get_begin_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_lifespan_get_end")]
        int get_end_array (char[]? str);
        public string end {
            [CCode (cname = "mb4_lifespan_get_end_wrapper")]
            owned get {
                int size = get_end_array (null);
                char[] buf = new char[size + 1];
                get_end_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_medium_delete", lower_case_cprefix = "mb4_medium_")]
    public class Medium : Entity {
        [CCode (cname = "mb4_medium_clone")]
        public Medium.copy(Medium medium);
        
        [CCode (cname = "mb4_medium_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_medium_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        public int position {
            [CCode (cname = "mb4_medium_get_position")]
            get;
        }
        
        [CCode (cname = "mb4_medium_get_format")]
        int get_format_array (char[]? str);
        public string format {
            [CCode (cname = "mb4_medium_get_format_wrapper")]
            owned get {
                int size = get_format_array (null);
                char[] buf = new char[size + 1];
                get_format_array (buf);
                return (string) buf;
            }
        }
        public DiscList? disc_list {
            [CCode (cname = "mb4_medium_get_disclist")]
            get;
        }
        public TrackList? track_list {
            [CCode (cname = "mb4_medium_get_tracklist")]
            get;
        }
        [CCode (cname = "mb4_medium_contains_discid")]
        public bool contains_disc_id(string disc_id);
    }

    [Compact]
    [CCode (free_function = "mb4_message_delete", lower_case_cprefix = "mb4_message_")]
    public class Message : Entity {
        [CCode (cname = "mb4_message_clone")]
        public Message.copy(Message message);
        
        [CCode (cname = "mb4_message_get_text")]
        int get_text_array (char[]? str);
        public string text {
            [CCode (cname = "mb4_message_get_text_wrapper")]
            owned get {
                int size = get_text_array (null);
                char[] buf = new char[size + 1];
                get_text_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_metadata_delete", lower_case_cprefix = "mb4_metadata_")]
    public class Metadata : Entity {
        [CCode (cname = "mb4_metadata_clone")]
        public Metadata.copy(Metadata metadata);
        
        [CCode (cname = "mb4_metadata_get_xmlns")]
        int get_xmlns_array (char[]? str);
        public string xmlns {
            [CCode (cname = "mb4_metadata_get_xmlns_wrapper")]
            owned get {
                int size = get_xmlns_array (null);
                char[] buf = new char[size + 1];
                get_xmlns_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_metadata_get_xmlnsext")]
        int get_xmlns_ext_array (char[]? str);
        public string xmlns_ext {
            [CCode (cname = "mb4_metadata_get_xmlnsext_wrapper")]
            owned get {
                int size = get_xmlns_ext_array (null);
                char[] buf = new char[size + 1];
                get_xmlns_ext_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_metadata_get_generator")]
        int get_generator_array (char[]? str);
        public string generator {
            [CCode (cname = "mb4_metadata_get_generator_wrapper")]
            owned get {
                int size = get_generator_array (null);
                char[] buf = new char[size + 1];
                get_generator_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_metadata_get_created")]
        int get_created_array (char[]? str);
        public string created {
            [CCode (cname = "mb4_metadata_get_created_wrapper")]
            owned get {
                int size = get_created_array (null);
                char[] buf = new char[size + 1];
                get_created_array (buf);
                return (string) buf;
            }
        }
        public Artist? artist {
            [CCode (cname = "mb4_metadata_get_artist")]
            get;
        }
        public Release? release {
            [CCode (cname = "mb4_metadata_get_release")]
            get;
        }
        public ReleaseGroup? release_group {
            [CCode (cname = "mb4_metadata_get_releasegroup")]
            get;
        }
        public Recording? recording {
            [CCode (cname = "mb4_metadata_get_recording")]
            get;
        }
        public Label? label {
            [CCode (cname = "mb4_metadata_get_label")]
            get;
        }
        public Work? work {
            [CCode (cname = "mb4_metadata_get_work")]
            get;
        }
        public PUID? puid {
            [CCode (cname = "mb4_metadata_get_puid")]
            get;
        }
        public ISRC? isrc {
            [CCode (cname = "mb4_metadata_get_isrc")]
            get;
        }
        public Disc? disc {
            [CCode (cname = "mb4_metadata_get_disc")]
            get;
        }
        public LabelInfoList? label_info_list {
            [CCode (cname = "mb4_metadata_get_labelinfolist")]
            get;
        }
        public Rating? rating {
            [CCode (cname = "mb4_metadata_get_rating")]
            get;
        }
        public UserRating? user_rating {
            [CCode (cname = "mb4_metadata_get_userrating")]
            get;
        }
        public Collection? collection {
            [CCode (cname = "mb4_metadata_get_collection")]
            get;
        }
        public ArtistList? artist_list {
            [CCode (cname = "mb4_metadata_get_artistlist")]
            get;
        }
        public ReleaseList? release_list {
            [CCode (cname = "mb4_metadata_get_releaselist")]
            get;
        }
        public ReleaseGroupList? release_group_list {
            [CCode (cname = "mb4_metadata_get_releasegrouplist")]
            get;
        }
        public RecordingList? recording_list {
            [CCode (cname = "mb4_metadata_get_recordinglist")]
            get;
        }
        public LabelList? label_list {
            [CCode (cname = "mb4_metadata_get_labellist")]
            get;
        }
        public WorkList? work_list {
            [CCode (cname = "mb4_metadata_get_worklist")]
            get;
        }
        public ISRCList? isrc_list {
            [CCode (cname = "mb4_metadata_get_isrclist")]
            get;
        }
        public AnnotationList? annotation_list {
            [CCode (cname = "mb4_metadata_get_annotationlist")]
            get;
        }
        public CDStubList? cd_stub_list {
            [CCode (cname = "mb4_metadata_get_cdstublist")]
            get;
        }
        public FreeDBDiscList? free_db_disc_list {
            [CCode (cname = "mb4_metadata_get_freedbdisclist")]
            get;
        }
        public TagList? tag_list {
            [CCode (cname = "mb4_metadata_get_taglist")]
            get;
        }
        public UserTagList? user_tag_list {
            [CCode (cname = "mb4_metadata_get_usertaglist")]
            get;
        }
        public CollectionList? collection_list {
            [CCode (cname = "mb4_metadata_get_collectionlist")]
            get;
        }
        public CDStub? cd_stub {
            [CCode (cname = "mb4_metadata_get_cdstub")]
            get;
        }
        public Message? message {
            [CCode (cname = "mb4_metadata_get_message")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_namecredit_delete", lower_case_cprefix = "mb4_namecredit_")]
    public class NameCredit : Entity {
        [CCode (cname = "mb4_namecredit_clone")]
        public NameCredit.copy(NameCredit namecredit);
        
        [CCode (cname = "mb4_namecredit_get_joinphrase")]
        int get_join_phrase_array (char[]? str);
        public string join_phrase {
            [CCode (cname = "mb4_namecredit_get_joinphrase_wrapper")]
            owned get {
                int size = get_join_phrase_array (null);
                char[] buf = new char[size + 1];
                get_join_phrase_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_namecredit_get_name")]
        int get_name_array (char[]? str);
        public string name {
            [CCode (cname = "mb4_namecredit_get_name_wrapper")]
            owned get {
                int size = get_name_array (null);
                char[] buf = new char[size + 1];
                get_name_array (buf);
                return (string) buf;
            }
        }
        public Artist? artist {
            [CCode (cname = "mb4_namecredit_get_artist")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_nonmbtrack_delete", lower_case_cprefix = "mb4_nonmbtrack_")]
    public class NonMBTrack : Entity {
        [CCode (cname = "mb4_nonmbtrack_clone")]
        public NonMBTrack.copy(NonMBTrack nonmbtrack);
        
        [CCode (cname = "mb4_nonmbtrack_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_nonmbtrack_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_nonmbtrack_get_artist")]
        int get_artist_array (char[]? str);
        public string artist {
            [CCode (cname = "mb4_nonmbtrack_get_artist_wrapper")]
            owned get {
                int size = get_artist_array (null);
                char[] buf = new char[size + 1];
                get_artist_array (buf);
                return (string) buf;
            }
        }
        public int length {
            [CCode (cname = "mb4_nonmbtrack_get_length")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_puid_delete", lower_case_cprefix = "mb4_puid_")]
    public class PUID : Entity {
        [CCode (cname = "mb4_puid_clone")]
        public PUID.copy(PUID puid);
        
        [CCode (cname = "mb4_puid_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_puid_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        public RecordingList? recording_list {
            [CCode (cname = "mb4_puid_get_recordinglist")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_query_delete", lower_case_cprefix = "mb4_query_")]
    public class Query {
        [CCode (cname = "mb4_query_clone")]
        public Query.copy(Query query);
        public int last_http_code {
            [CCode (cname = "mb4_query_get_lasthttpcode")]
            get;
        }
        
        [CCode (cname = "mb4_query_get_lasterrormessage")]
        int get_last_error_message_array (char[]? str);
        public string last_error_message {
            [CCode (cname = "mb4_query_get_lasterrormessage_wrapper")]
            owned get {
                int size = get_last_error_message_array (null);
                char[] buf = new char[size + 1];
                get_last_error_message_array (buf);
                return (string) buf;
            }
        }
        public Query(string user_agent, string? server = null, int port = 0);
        
        public string username { set; }
        
        public string password { set; }
        
        public string proxy_host { 
            [CCode (cname = "mb4_query_set_proxyhost")]
            set; 
        }
        
        public int proxy_port { 
            [CCode (cname = "mb4_query_set_proxyport")]
            set; 
        }
        
        public string proxy_username {
            [CCode (cname = "mb4_query_set_proxyusername")]
            set;
        }
        
        public string proxy_password {
            [CCode (cname = "mb4_query_set_proxypassword")]
            set;
        }
        
        [CCode (cname = "mb4_query_lookup_discid")]
        public ReleaseList lookup_disc_id(string disc_id);
        
        public Release lookup_release(string release);
        
        [CCode (cname = "mb4_query_query")]
        public Metadata query_array(string entity, string? id, string? resource, int num_params, string* param_names, string* param_values);
        
        [CCode (cname = "mb4_query_query_wrapper")]
        public Metadata query(string entity, string? id, string? resource, ...) {
            string[] param_names = new string[0];
            string[] param_values = new string[0];
            var l = va_list();
            while (true) {
                string? name = l.arg();
                if (name == null) {
                    break;
                }
                string val = l.arg();
                param_names += name;
                param_values += val;
            }
            return query_array(entity, id, resource, param_names.length, param_names, param_values);
        }
        
        [CCode (cname = "mb4_query_add_collection_entries")]
        public bool add_collection_entries_array(string collection, [CCode (array_length_pos=1.5)] string[] entries);
        
        [CCode (cname = "mb4_query_add_collection_wrapper")]
        public bool add_collection_entries(string collection, ...) {
            string[] entries = new string[0];
            var l = va_list();
            while (true) {
                string? entry = l.arg();
                if (entry == null) {
                    break;
                }
                entries += entry;
            }
            return add_collection_entries_array(collection, entries);
        }
        
        [CCode (cname = "mb4_query_delete_collection_entries")]
        public bool delete_collection_entries_array(string collection, [CCode (array_length_pos=1.5)] string[] entries);
        
        [CCode (cname = "mb4_query_delete_collection_wrapper")]
        public bool delete_collection_entries(string collection, ...) {
            string[] entries = new string[0];
            var l = va_list();
            while (true) {
                string? entry = l.arg();
                if (entry == null) {
                    break;
                }
                entries += entry;
            }
            return delete_collection_entries_array(collection, entries);
        }
        
        [CCode (cname = "tQueryResult")]
        public enum Result {
            [CCode (cname = "eQuery_Success")]
            SUCCESS,
            [CCode (cname = "eQuery_ConnectionError")]
            CONNECTION_ERROR,
            [CCode (cname = "eQuery_Timeout")]
            TIMEOUT,
            [CCode (cname = "eQuery_AuthenticationError")]
            AUTHENTICATION_ERROR,
            [CCode (cname = "eQuery_FetchError")]
            FETCH_ERROR,
            [CCode (cname = "eQuery_RequestError")]
            REQUEST_ERROR,
            [CCode (cname = "eQuery_ResourceNotFound")]
            RESOURCE_NOT_FOUND
        }
        
        public Result last_result { 
            [CCode (cname = "mb4_query_get_lastresult")]
            get; 
        }
    }

    [Compact]
    [CCode (free_function = "mb4_rating_delete", lower_case_cprefix = "mb4_rating_")]
    public class Rating : Entity {
        [CCode (cname = "mb4_rating_clone")]
        public Rating.copy(Rating rating);
        public int votes_count {
            [CCode (cname = "mb4_rating_get_votescount")]
            get;
        }
        public double rating {
            [CCode (cname = "mb4_rating_get_rating")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_recording_delete", lower_case_cprefix = "mb4_recording_")]
    public class Recording : Entity {
        [CCode (cname = "mb4_recording_clone")]
        public Recording.copy(Recording recording);
        
        [CCode (cname = "mb4_recording_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_recording_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_recording_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_recording_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        public int length {
            [CCode (cname = "mb4_recording_get_length")]
            get;
        }
        
        [CCode (cname = "mb4_recording_get_disambiguation")]
        int get_disambiguation_array (char[]? str);
        public string disambiguation {
            [CCode (cname = "mb4_recording_get_disambiguation_wrapper")]
            owned get {
                int size = get_disambiguation_array (null);
                char[] buf = new char[size + 1];
                get_disambiguation_array (buf);
                return (string) buf;
            }
        }
        public ArtistCredit? artist_credit {
            [CCode (cname = "mb4_recording_get_artistcredit")]
            get;
        }
        public ReleaseList? release_list {
            [CCode (cname = "mb4_recording_get_releaselist")]
            get;
        }
        public PUIDList? puid_list {
            [CCode (cname = "mb4_recording_get_puidlist")]
            get;
        }
        public ISRCList? isrc_list {
            [CCode (cname = "mb4_recording_get_isrclist")]
            get;
        }
        public RelationList? relation_list {
            [CCode (cname = "mb4_recording_get_relationlist")]
            get;
        }
        public TagList? tag_list {
            [CCode (cname = "mb4_recording_get_taglist")]
            get;
        }
        public UserTagList? user_tag_list {
            [CCode (cname = "mb4_recording_get_usertaglist")]
            get;
        }
        public Rating? rating {
            [CCode (cname = "mb4_recording_get_rating")]
            get;
        }
        public UserRating? user_rating {
            [CCode (cname = "mb4_recording_get_userrating")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_relation_delete", lower_case_cprefix = "mb4_relation_")]
    public class Relation : Entity {
        [CCode (cname = "mb4_relation_clone")]
        public Relation.copy(Relation relation);
        
        [CCode (cname = "mb4_relation_get_type")]
        int get_type_array (char[]? str);
        public string type {
            [CCode (cname = "mb4_relation_get_type_wrapper")]
            owned get {
                int size = get_type_array (null);
                char[] buf = new char[size + 1];
                get_type_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_relation_get_target")]
        int get_target_array (char[]? str);
        public string target {
            [CCode (cname = "mb4_relation_get_target_wrapper")]
            owned get {
                int size = get_target_array (null);
                char[] buf = new char[size + 1];
                get_target_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_relation_get_direction")]
        int get_direction_array (char[]? str);
        public string direction {
            [CCode (cname = "mb4_relation_get_direction_wrapper")]
            owned get {
                int size = get_direction_array (null);
                char[] buf = new char[size + 1];
                get_direction_array (buf);
                return (string) buf;
            }
        }
        public AttributeList? attribute_list {
            [CCode (cname = "mb4_relation_get_attributelist")]
            get;
        }
        
        [CCode (cname = "mb4_relation_get_begin")]
        int get_begin_array (char[]? str);
        public string begin {
            [CCode (cname = "mb4_relation_get_begin_wrapper")]
            owned get {
                int size = get_begin_array (null);
                char[] buf = new char[size + 1];
                get_begin_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_relation_get_end")]
        int get_end_array (char[]? str);
        public string end {
            [CCode (cname = "mb4_relation_get_end_wrapper")]
            owned get {
                int size = get_end_array (null);
                char[] buf = new char[size + 1];
                get_end_array (buf);
                return (string) buf;
            }
        }
        public Artist? artist {
            [CCode (cname = "mb4_relation_get_artist")]
            get;
        }
        public Release? release {
            [CCode (cname = "mb4_relation_get_release")]
            get;
        }
        public ReleaseGroup? release_group {
            [CCode (cname = "mb4_relation_get_releasegroup")]
            get;
        }
        public Recording? recording {
            [CCode (cname = "mb4_relation_get_recording")]
            get;
        }
        public Label? label {
            [CCode (cname = "mb4_relation_get_label")]
            get;
        }
        public Work? work {
            [CCode (cname = "mb4_relation_get_work")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_release_delete", lower_case_cprefix = "mb4_release_")]
    public class Release : Entity {
        [CCode (cname = "mb4_release_clone")]
        public Release.copy(Release release);
        
        [CCode (cname = "mb4_release_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_release_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_release_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_release_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_release_get_status")]
        int get_status_array (char[]? str);
        public string status {
            [CCode (cname = "mb4_release_get_status_wrapper")]
            owned get {
                int size = get_status_array (null);
                char[] buf = new char[size + 1];
                get_status_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_release_get_quality")]
        int get_quality_array (char[]? str);
        public string quality {
            [CCode (cname = "mb4_release_get_quality_wrapper")]
            owned get {
                int size = get_quality_array (null);
                char[] buf = new char[size + 1];
                get_quality_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_release_get_disambiguation")]
        int get_disambiguation_array (char[]? str);
        public string disambiguation {
            [CCode (cname = "mb4_release_get_disambiguation_wrapper")]
            owned get {
                int size = get_disambiguation_array (null);
                char[] buf = new char[size + 1];
                get_disambiguation_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_release_get_packaging")]
        int get_packaging_array (char[]? str);
        public string packaging {
            [CCode (cname = "mb4_release_get_packaging_wrapper")]
            owned get {
                int size = get_packaging_array (null);
                char[] buf = new char[size + 1];
                get_packaging_array (buf);
                return (string) buf;
            }
        }
        public TextRepresentation? text_representation {
            [CCode (cname = "mb4_release_get_textrepresentation")]
            get;
        }
        public ArtistCredit? artist_credit {
            [CCode (cname = "mb4_release_get_artistcredit")]
            get;
        }
        public ReleaseGroup? release_group {
            [CCode (cname = "mb4_release_get_releasegroup")]
            get;
        }
        
        [CCode (cname = "mb4_release_get_date")]
        int get_date_array (char[]? str);
        public string date {
            [CCode (cname = "mb4_release_get_date_wrapper")]
            owned get {
                int size = get_date_array (null);
                char[] buf = new char[size + 1];
                get_date_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_release_get_country")]
        int get_country_array (char[]? str);
        public string country {
            [CCode (cname = "mb4_release_get_country_wrapper")]
            owned get {
                int size = get_country_array (null);
                char[] buf = new char[size + 1];
                get_country_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_release_get_barcode")]
        int get_barcode_array (char[]? str);
        public string barcode {
            [CCode (cname = "mb4_release_get_barcode_wrapper")]
            owned get {
                int size = get_barcode_array (null);
                char[] buf = new char[size + 1];
                get_barcode_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_release_get_asin")]
        int get_asin_array (char[]? str);
        public string asin {
            [CCode (cname = "mb4_release_get_asin_wrapper")]
            owned get {
                int size = get_asin_array (null);
                char[] buf = new char[size + 1];
                get_asin_array (buf);
                return (string) buf;
            }
        }
        public LabelInfoList? label_info_list {
            [CCode (cname = "mb4_release_get_labelinfolist")]
            get;
        }
        public MediumList? medium_list {
            [CCode (cname = "mb4_release_get_mediumlist")]
            get;
        }
        public RelationList? relation_list {
            [CCode (cname = "mb4_release_get_relationlist")]
            get;
        }
        [CCode (cname = "mb4_release_media_matching_discid")]
        public MediumList media_matching_disc_id(string disc_id);
    }

    [Compact]
    [CCode (free_function = "mb4_releasegroup_delete", lower_case_cprefix = "mb4_releasegroup_")]
    public class ReleaseGroup : Entity {
        [CCode (cname = "mb4_releasegroup_clone")]
        public ReleaseGroup.copy(ReleaseGroup releasegroup);
        
        [CCode (cname = "mb4_releasegroup_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_releasegroup_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_releasegroup_get_type")]
        int get_type_array (char[]? str);
        public string type {
            [CCode (cname = "mb4_releasegroup_get_type_wrapper")]
            owned get {
                int size = get_type_array (null);
                char[] buf = new char[size + 1];
                get_type_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_releasegroup_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_releasegroup_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_releasegroup_get_disambiguation")]
        int get_disambiguation_array (char[]? str);
        public string disambiguation {
            [CCode (cname = "mb4_releasegroup_get_disambiguation_wrapper")]
            owned get {
                int size = get_disambiguation_array (null);
                char[] buf = new char[size + 1];
                get_disambiguation_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_releasegroup_get_firstreleasedate")]
        int get_first_release_date_array (char[]? str);
        public string first_release_date {
            [CCode (cname = "mb4_releasegroup_get_firstreleasedate_wrapper")]
            owned get {
                int size = get_first_release_date_array (null);
                char[] buf = new char[size + 1];
                get_first_release_date_array (buf);
                return (string) buf;
            }
        }
        public ArtistCredit? artist_credit {
            [CCode (cname = "mb4_releasegroup_get_artistcredit")]
            get;
        }
        public ReleaseList? release_list {
            [CCode (cname = "mb4_releasegroup_get_releaselist")]
            get;
        }
        public RelationList? relation_list {
            [CCode (cname = "mb4_releasegroup_get_relationlist")]
            get;
        }
        public TagList? tag_list {
            [CCode (cname = "mb4_releasegroup_get_taglist")]
            get;
        }
        public UserTagList? user_tag_list {
            [CCode (cname = "mb4_releasegroup_get_usertaglist")]
            get;
        }
        public Rating? rating {
            [CCode (cname = "mb4_releasegroup_get_rating")]
            get;
        }
        public UserRating? user_rating {
            [CCode (cname = "mb4_releasegroup_get_userrating")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_tag_delete", lower_case_cprefix = "mb4_tag_")]
    public class Tag : Entity {
        [CCode (cname = "mb4_tag_clone")]
        public Tag.copy(Tag tag);
        public int count {
            [CCode (cname = "mb4_tag_get_count")]
            get;
        }
        
        [CCode (cname = "mb4_tag_get_name")]
        int get_name_array (char[]? str);
        public string name {
            [CCode (cname = "mb4_tag_get_name_wrapper")]
            owned get {
                int size = get_name_array (null);
                char[] buf = new char[size + 1];
                get_name_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_textrepresentation_delete", lower_case_cprefix = "mb4_textrepresentation_")]
    public class TextRepresentation : Entity {
        [CCode (cname = "mb4_textrepresentation_clone")]
        public TextRepresentation.copy(TextRepresentation textrepresentation);
        
        [CCode (cname = "mb4_textrepresentation_get_language")]
        int get_language_array (char[]? str);
        public string language {
            [CCode (cname = "mb4_textrepresentation_get_language_wrapper")]
            owned get {
                int size = get_language_array (null);
                char[] buf = new char[size + 1];
                get_language_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_textrepresentation_get_script")]
        int get_script_array (char[]? str);
        public string script {
            [CCode (cname = "mb4_textrepresentation_get_script_wrapper")]
            owned get {
                int size = get_script_array (null);
                char[] buf = new char[size + 1];
                get_script_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_track_delete", lower_case_cprefix = "mb4_track_")]
    public class Track : Entity {
        [CCode (cname = "mb4_track_clone")]
        public Track.copy(Track track);
        public int position {
            [CCode (cname = "mb4_track_get_position")]
            get;
        }
        
        [CCode (cname = "mb4_track_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_track_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        public Recording? recording {
            [CCode (cname = "mb4_track_get_recording")]
            get;
        }
        public int length {
            [CCode (cname = "mb4_track_get_length")]
            get;
        }
        public ArtistCredit? artist_credit {
            [CCode (cname = "mb4_track_get_artistcredit")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_userrating_delete", lower_case_cprefix = "mb4_userrating_")]
    public class UserRating : Entity {
        [CCode (cname = "mb4_userrating_clone")]
        public UserRating.copy(UserRating userrating);
        public int user_rating {
            [CCode (cname = "mb4_userrating_get_userrating")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_usertag_delete", lower_case_cprefix = "mb4_usertag_")]
    public class UserTag : Entity {
        [CCode (cname = "mb4_usertag_clone")]
        public UserTag.copy(UserTag usertag);
        
        [CCode (cname = "mb4_usertag_get_name")]
        int get_name_array (char[]? str);
        public string name {
            [CCode (cname = "mb4_usertag_get_name_wrapper")]
            owned get {
                int size = get_name_array (null);
                char[] buf = new char[size + 1];
                get_name_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_work_delete", lower_case_cprefix = "mb4_work_")]
    public class Work : Entity {
        [CCode (cname = "mb4_work_clone")]
        public Work.copy(Work work);
        
        [CCode (cname = "mb4_work_get_id")]
        int get_id_array (char[]? str);
        public string id {
            [CCode (cname = "mb4_work_get_id_wrapper")]
            owned get {
                int size = get_id_array (null);
                char[] buf = new char[size + 1];
                get_id_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_work_get_type")]
        int get_type_array (char[]? str);
        public string type {
            [CCode (cname = "mb4_work_get_type_wrapper")]
            owned get {
                int size = get_type_array (null);
                char[] buf = new char[size + 1];
                get_type_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_work_get_title")]
        int get_title_array (char[]? str);
        public string title {
            [CCode (cname = "mb4_work_get_title_wrapper")]
            owned get {
                int size = get_title_array (null);
                char[] buf = new char[size + 1];
                get_title_array (buf);
                return (string) buf;
            }
        }
        public ArtistCredit? artist_credit {
            [CCode (cname = "mb4_work_get_artistcredit")]
            get;
        }
        
        [CCode (cname = "mb4_work_get_iswc")]
        int get_iswc_array (char[]? str);
        public string iswc {
            [CCode (cname = "mb4_work_get_iswc_wrapper")]
            owned get {
                int size = get_iswc_array (null);
                char[] buf = new char[size + 1];
                get_iswc_array (buf);
                return (string) buf;
            }
        }
        
        [CCode (cname = "mb4_work_get_disambiguation")]
        int get_disambiguation_array (char[]? str);
        public string disambiguation {
            [CCode (cname = "mb4_work_get_disambiguation_wrapper")]
            owned get {
                int size = get_disambiguation_array (null);
                char[] buf = new char[size + 1];
                get_disambiguation_array (buf);
                return (string) buf;
            }
        }
        public AliasList? alias_list {
            [CCode (cname = "mb4_work_get_aliaslist")]
            get;
        }
        public RelationList? relation_list {
            [CCode (cname = "mb4_work_get_relationlist")]
            get;
        }
        public TagList? tag_list {
            [CCode (cname = "mb4_work_get_taglist")]
            get;
        }
        public UserTagList? user_tag_list {
            [CCode (cname = "mb4_work_get_usertaglist")]
            get;
        }
        public Rating? rating {
            [CCode (cname = "mb4_work_get_rating")]
            get;
        }
        public UserRating? user_rating {
            [CCode (cname = "mb4_work_get_userrating")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_alias_list_delete")]
    public class AliasList : Entity {
        public int size {
            [CCode (cname = "mb4_alias_list_size")]
            get;
        }
        [CCode (cname = "mb4_alias_list_item")]
        public unowned Alias get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_alias_list_clone")]
        public AliasList.copy (AliasList alias_list);
    }

    [Compact]
    [CCode (free_function = "mb4_annotation_list_delete")]
    public class AnnotationList : Entity {
        public int size {
            [CCode (cname = "mb4_annotation_list_size")]
            get;
        }
        [CCode (cname = "mb4_annotation_list_item")]
        public unowned Annotation get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_annotation_list_clone")]
        public AnnotationList.copy (AnnotationList annotation_list);
    }

    [Compact]
    [CCode (free_function = "mb4_artist_list_delete")]
    public class ArtistList : Entity {
        public int size {
            [CCode (cname = "mb4_artist_list_size")]
            get;
        }
        [CCode (cname = "mb4_artist_list_item")]
        public unowned Artist get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_artist_list_clone")]
        public ArtistList.copy (ArtistList artist_list);
    }

    [Compact]
    [CCode (free_function = "mb4_attribute_list_delete")]
    public class AttributeList : Entity {
        public int size {
            [CCode (cname = "mb4_attribute_list_size")]
            get;
        }
        [CCode (cname = "mb4_attribute_list_item")]
        public unowned Attribute get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_attribute_list_clone")]
        public AttributeList.copy (AttributeList attribute_list);
    }

    [Compact]
    [CCode (free_function = "mb4_cdstub_list_delete")]
    public class CDStubList : Entity {
        public int size {
            [CCode (cname = "mb4_cdstub_list_size")]
            get;
        }
        [CCode (cname = "mb4_cdstub_list_item")]
        public unowned CDStub get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_cdstub_list_clone")]
        public CDStubList.copy (CDStubList cdstub_list);
    }

    [Compact]
    [CCode (free_function = "mb4_collection_list_delete")]
    public class CollectionList : Entity {
        public int size {
            [CCode (cname = "mb4_collection_list_size")]
            get;
        }
        [CCode (cname = "mb4_collection_list_item")]
        public unowned Collection get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_collection_list_clone")]
        public CollectionList.copy (CollectionList collection_list);
    }

    [Compact]
    [CCode (free_function = "mb4_disc_list_delete")]
    public class DiscList : Entity {
        public int size {
            [CCode (cname = "mb4_disc_list_size")]
            get;
        }
        [CCode (cname = "mb4_disc_list_item")]
        public unowned Disc get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_disc_list_clone")]
        public DiscList.copy (DiscList disc_list);
    }

    [Compact]
    [CCode (free_function = "mb4_freedbdisc_list_delete")]
    public class FreeDBDiscList : Entity {
        public int size {
            [CCode (cname = "mb4_freedbdisc_list_size")]
            get;
        }
        [CCode (cname = "mb4_freedbdisc_list_item")]
        public unowned FreeDBDisc get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_freedbdisc_list_clone")]
        public FreeDBDiscList.copy (FreeDBDiscList freedbdisc_list);
    }

    [Compact]
    [CCode (free_function = "mb4_isrc_list_delete")]
    public class ISRCList : Entity {
        public int size {
            [CCode (cname = "mb4_isrc_list_size")]
            get;
        }
        [CCode (cname = "mb4_isrc_list_item")]
        public unowned ISRC get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_isrc_list_clone")]
        public ISRCList.copy (ISRCList isrc_list);
    }

    [Compact]
    [CCode (free_function = "mb4_label_list_delete")]
    public class LabelList : Entity {
        public int size {
            [CCode (cname = "mb4_label_list_size")]
            get;
        }
        [CCode (cname = "mb4_label_list_item")]
        public unowned Label get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_label_list_clone")]
        public LabelList.copy (LabelList label_list);
    }

    [Compact]
    [CCode (free_function = "mb4_labelinfo_list_delete")]
    public class LabelInfoList : Entity {
        public int size {
            [CCode (cname = "mb4_labelinfo_list_size")]
            get;
        }
        [CCode (cname = "mb4_labelinfo_list_item")]
        public unowned LabelInfo get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_labelinfo_list_clone")]
        public LabelInfoList.copy (LabelInfoList labelinfo_list);
    }

    [Compact]
    [CCode (free_function = "mb4_medium_list_delete")]
    public class MediumList : Entity {
        public int size {
            [CCode (cname = "mb4_medium_list_size")]
            get;
        }
        [CCode (cname = "mb4_medium_list_item")]
        public unowned Medium get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_medium_list_clone")]
        public MediumList.copy (MediumList medium_list);
        public int track_count {
            [CCode (cname = "mb4_medium_list_get_trackcount")]
            get;
        }
    }

    [Compact]
    [CCode (free_function = "mb4_namecredit_list_delete")]
    public class NameCreditList : Entity {
        public int size {
            [CCode (cname = "mb4_namecredit_list_size")]
            get;
        }
        [CCode (cname = "mb4_namecredit_list_item")]
        public unowned NameCredit get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_namecredit_list_clone")]
        public NameCreditList.copy (NameCreditList namecredit_list);
    }

    [Compact]
    [CCode (free_function = "mb4_nonmbtrack_list_delete")]
    public class NonMBTrackList : Entity {
        public int size {
            [CCode (cname = "mb4_nonmbtrack_list_size")]
            get;
        }
        [CCode (cname = "mb4_nonmbtrack_list_item")]
        public unowned NonMBTrack get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_nonmbtrack_list_clone")]
        public NonMBTrackList.copy (NonMBTrackList nonmbtrack_list);
    }

    [Compact]
    [CCode (free_function = "mb4_puid_list_delete")]
    public class PUIDList : Entity {
        public int size {
            [CCode (cname = "mb4_puid_list_size")]
            get;
        }
        [CCode (cname = "mb4_puid_list_item")]
        public unowned PUID get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_puid_list_clone")]
        public PUIDList.copy (PUIDList puid_list);
    }

    [Compact]
    [CCode (free_function = "mb4_recording_list_delete")]
    public class RecordingList : Entity {
        public int size {
            [CCode (cname = "mb4_recording_list_size")]
            get;
        }
        [CCode (cname = "mb4_recording_list_item")]
        public unowned Recording get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_recording_list_clone")]
        public RecordingList.copy (RecordingList recording_list);
    }

    [Compact]
    [CCode (free_function = "mb4_relation_list_delete")]
    public class RelationList : Entity {
        public int size {
            [CCode (cname = "mb4_relation_list_size")]
            get;
        }
        [CCode (cname = "mb4_relation_list_item")]
        public unowned Relation get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_relation_list_clone")]
        public RelationList.copy (RelationList relation_list);
        
        [CCode (cname = "mb4_relation_list_get_targettype")]
        int get_target_type_array (char[]? str);
        public string target_type {
            [CCode (cname = "mb4_relation_list_get_targettype_wrapper")]
            owned get {
                int size = get_target_type_array (null);
                char[] buf = new char[size + 1];
                get_target_type_array (buf);
                return (string) buf;
            }
        }
    }

    [Compact]
    [CCode (free_function = "mb4_release_list_delete")]
    public class ReleaseList : Entity {
        public int size {
            [CCode (cname = "mb4_release_list_size")]
            get;
        }
        [CCode (cname = "mb4_release_list_item")]
        public unowned Release get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_release_list_clone")]
        public ReleaseList.copy (ReleaseList release_list);
    }

    [Compact]
    [CCode (free_function = "mb4_releasegroup_list_delete")]
    public class ReleaseGroupList : Entity {
        public int size {
            [CCode (cname = "mb4_releasegroup_list_size")]
            get;
        }
        [CCode (cname = "mb4_releasegroup_list_item")]
        public unowned ReleaseGroup get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_releasegroup_list_clone")]
        public ReleaseGroupList.copy (ReleaseGroupList releasegroup_list);
    }

    [Compact]
    [CCode (free_function = "mb4_tag_list_delete")]
    public class TagList : Entity {
        public int size {
            [CCode (cname = "mb4_tag_list_size")]
            get;
        }
        [CCode (cname = "mb4_tag_list_item")]
        public unowned Tag get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_tag_list_clone")]
        public TagList.copy (TagList tag_list);
    }

    [Compact]
    [CCode (free_function = "mb4_track_list_delete")]
    public class TrackList : Entity {
        public int size {
            [CCode (cname = "mb4_track_list_size")]
            get;
        }
        [CCode (cname = "mb4_track_list_item")]
        public unowned Track get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_track_list_clone")]
        public TrackList.copy (TrackList track_list);
    }

    [Compact]
    [CCode (free_function = "mb4_usertag_list_delete")]
    public class UserTagList : Entity {
        public int size {
            [CCode (cname = "mb4_usertag_list_size")]
            get;
        }
        [CCode (cname = "mb4_usertag_list_item")]
        public unowned UserTag get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_usertag_list_clone")]
        public UserTagList.copy (UserTagList usertag_list);
    }

    [Compact]
    [CCode (free_function = "mb4_work_list_delete")]
    public class WorkList : Entity {
        public int size {
            [CCode (cname = "mb4_work_list_size")]
            get;
        }
        [CCode (cname = "mb4_work_list_item")]
        public unowned Work get (int item);
        public int count { get; }
        public int offset { get; }
        [CCode (cname = "mb4_work_list_clone")]
        public WorkList.copy (WorkList work_list);
    }

}
