PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS artist_type (
	id		INTEGER PRIMARY KEY NOT NULL,
	name		VARCHAR UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS country (
	id		INTEGER PRIMARY KEY NOT NULL,
	iso_code	VARCHAR	UNIQUE NOT NULL,
	name		VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS gender (
	id		INTEGER PRIMARY KEY NOT NULL,
	name		VARCHAR UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS artist (
	id		INTEGER PRIMARY KEY NOT NULL,
	gid		VARCHAR UNIQUE NOT NULL,
	name		VARCHAR NOT NULL,
	sort_name	VARCHAR NOT NULL,
	begin_date_year	INTEGER,
	begin_date_month	INTEGER,
	begin_date_day	INTEGER,
	end_date_year	INTEGER,
	end_date_month	INTEGER,
	end_date_day	INTEGER,
	artist_type	INTEGER REFERENCES artist_type (id),
	country		INTEGER REFERENCES country (id),
	gender		INTEGER REFERENCES gender (id),
	comment		VARCHAR,
	last_updated	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS artist_credit (
	id		INTEGER PRIMARY KEY NOT NULL,
	name		VARCHAR NOT NULL,
	artist_count	INTEGER NOT NULL,
	last_updated	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS artist_credit_name (
	artist_credit	INTEGER REFERENCES artist_credit (id) NOT NULL,
	position	INTEGER NOT NULL,
	artist		INTEGER REFERENCES artist (id) NOT NULL,
	name		VARCHAR NOT NULL,
	join_phrase	VARCHAR,
	PRIMARY KEY (artist_credit, position)
);

CREATE TABLE IF NOT EXISTS recording (
	id		INTEGER PRIMARY KEY NOT NULL,
	gid		VARCHAR UNIQUE NOT NULL,
	name		VARCHAR NOT NULL,
	artist_credit	INTEGER REFERENCES artist_credit (id) NOT NULL,
	length		INTEGER CHECK (length IS NULL OR length > 0),
	comment		VARCHAR,
	last_updated	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS tracklist (
	id		INTEGER PRIMARY KEY NOT NULL,
	track_count	INTEGER NOT NULL,
	last_updated	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS medium_format (
	id		INTEGER PRIMARY KEY NOT NULL,
	name		VARCHAR NOT NULL,
	parent		INTEGER REFERENCES medium_format (id)
);

CREATE TABLE IF NOT EXISTS medium (
	id		INTEGER PRIMARY KEY NOT NULL,
	tracklist	INTEGER REFERENCES tracklist (id) NOT NULL,
	release		INTEGER REFERENCES release (id) NOT NULL,
	position	INTEGER NOT NULL,
	medium_format	INTEGER REFERENCES medium_format (id) NOT NULL,
	name		VARCHAR NOT NULL,
	last_updated	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS track (
	id		INTEGER PRIMARY KEY NOT NULL,
	recording	INTEGER REFERENCES recording (id) NOT NULL,
	tracklist	INTEGER REFERENCES tracklist (id) NOT NULL,
	position	INTEGER NOT NULL,
	name		VARCHAR NOT NULL,
	artist_credit	INTEGER REFERENCES artist_credit (id) NOT NULL,
	length		INTEGER CHECK (length IS NULL OR length > 0),
	last_updated	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS file (
	id		INTEGER PRIMARY KEY NOT NULL,
	track		INTEGER REFERENCES track (id),
	recording	INTEGER REFERENCES recording (id) NOT NULL,
	release		INTEGER REFERENCES release (id),
	track_position	INTEGER NOT NULL,
	medium_position	INTEGER NOT NULL,
	codec		VARCHAR,
	bitrate		INTEGER,
	uri		VARCHAR UNIQUE NOT NULL,
	weight		INTEGER NOT NULL,
	last_updated	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
